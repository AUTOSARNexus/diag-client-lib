digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node39 [label="std::false_type",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node39 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="core_type::details\l::is_container_element\l_type_convertible\< typename,\l typename, typename \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcore__type_1_1details_1_1is__container__element__type__convertible.html",tooltip="Checks if std::remove_pointer_t<decltype(std::data(arr))>(*)[] is convertible to T(*)[]."];
  Node39 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="core_type::details\l::is_data_size_valid\l\< T, typename \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcore__type_1_1details_1_1is__data__size__valid.html",tooltip="Primary template handles std::size, std::data that have no nested ::type member."];
  Node39 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="core_type::details\l::is_span\< typename \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcore__type_1_1details_1_1is__span.html",tooltip="Primary template handles Span types that have no nested ::type member."];
  Node39 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="core_type::details\l::is_std_array\< typename \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structcore__type_1_1details_1_1is__std__array.html",tooltip="Primary template handles std::array types that have no nested ::type member."];
}
